<?xml version="1.0" encoding="UTF-8"?>
<Envelope>
	<KPISection>
    <!-- Those are usually read by the controller -->
		<!-- Incoming Req -->
		<KPI KPIname="GET_POLLS_RC"/>
        <KPI KPIname="CREATE_POLL_RC"/>
        <KPI KPIname="GET_POLL_RC"/>
        <KPI KPIname="VOTE_RC"/>
        <KPI KPIname="DELETE_POLL_RC"/>
        <!-- Req Done -->
		<KPI KPIname="GET_POLLS_RD"/>
        <KPI KPIname="CREATE_POLL_RD"/>
        <KPI KPIname="GET_POLL_RD"/>
        <KPI KPIname="VOTE_RD"/>
        <KPI KPIname="DELETE_POLL_RD"/>
                        
		<!-- Throughtput Tx -->
		<KPI KPIname="GET_POLLS_AvgTX"/>
        <KPI KPIname="CREATE_POLL_AvgTX"/>
        <KPI KPIname="GET_POLL_AvgTX"/>
        <KPI KPIname="VOTE_AvgTX"/>           
        <KPI KPIname="DELETE_POLL_AvgTX"/>
                
		<!-- AvgRT -->
		<KPI KPIname="GET_POLLS_AvgRT"/>
        <KPI KPIname="CREATE_POLL_AvgRT"/>
        <KPI KPIname="GET_POLL_AvgRT"/>
        <KPI KPIname="VOTE_AvgRT"/>           
        <KPI KPIname="DELETE_POLL_AvgRT"/>
		<!-- Queue Lenght -->
		<KPI KPIname="GET_POLLS_QL"/>
        <KPI KPIname="CREATE_POLL_QL"/>
        <KPI KPIname="GET_POLL_QL"/>
        <KPI KPIname="VOTE_QL"/>
        <KPI KPIname="DELETE_POLL_QL"/>
	</KPISection>

	<PerformanceObjectiveSection>
		<Info>SLO </Info>

		<Constraint>
			<Name>Create Poll Avg RT</Name>
			<KPIName>CREATE_POLL_AvgRT</KPIName>
			<Window unit="minute">5</Window>

			<Range unit="ms">
				<Min>0</Min>
				<Max>1500</Max>
			</Range>
			<Percentage>95</Percentage>
		</Constraint>
	</PerformanceObjectiveSection>

	<PerformanceObjectiveSection>
		<Constraint>
			<Name>Get Poll Avg RT</Name>
			<KPIName>GET_POLL_AvgRT</KPIName>
			<Window unit="minute">5</Window>

			<Range unit="ms">
				<Min>0</Min>
				<Max>500</Max>
			</Range>
			<Percentage>95</Percentage>
		</Constraint>
	</PerformanceObjectiveSection>

	<PerformanceObjectiveSection>
		<Constraint>
			<Name>Vote Poll Avg RT</Name>
			<KPIName>VOTE_AvgRT</KPIName>
			<Window unit="minute">5</Window>

			<Range unit="ms">
				<Min>0</Min>
				<Max>1000</Max>
			</Range>
			<Percentage>95</Percentage>
		</Constraint>
	</PerformanceObjectiveSection>

	<PerformanceObjectiveSection>
		<Constraint>
			<Name>Delete Poll Avg RT</Name>
			<KPIName>DELETE_POLL_AvgRT</KPIName>
			<Window unit="minute">5</Window>

			<Range unit="ms">
				<Min>0</Min>
				<Max>500</Max>
			</Range>
			<Percentage>95</Percentage>
		</Constraint>
	</PerformanceObjectiveSection>

	<!-- VM descriptions. Note the entry point -->
	<VirtualSystemCollection id="Test" entrypoint="frontend">
	
	
		<!-- VM Startup order. Backend must be run before the frontend. Controller must be run after everthing is ready.
			Eventually, run also the clients -->
		<StartupSection>
        <Item id="frontend" order="0" />
        <Item id="backend" order="1" />
        <Item id="appserver" order="2" />
        <Item id="controller" order="3" />
        <Item id="clients" order="4" />
		</StartupSection>

		<VirtualSystem id="frontend" min="1" max="1" initial="1">
			<ProductSection>
				<Product>Front End Server</Product>
				<Version>1.0</Version>

				<!-- VM Configuration -->
				<Property key="BASE_EMI" value="ami-0000014e" />
				<Property key="INSTANCE_TYPE" value="m1.medium" />

				<!-- Security settings for the VM  -->
				<Property key="SSH_KEY" value="elastic-testing-keys" />
				<Property key="SECURITY_GROUP" value="default" />

				<!-- User data for customizing the VM -->
				<!-- Components to start -->
				<Property key="STARTUP" type="string" value="controlinterface,monitoringendpoint,loadbalancer,monitoringgui" />
				<!-- Other configurations -->
				<!-- VM Level -->
				<Property key="USERDATA:INJECTED_HOSTNAME"
					cloudConfigurable="true" value="frontend" />
                    
                    
				<Property key="USERDATA:loadbalancer.startup.port" type="string" value="8081" />

				<Property key="USERDATA:monitoringendpoint.startup.servicefqn" type="string" value="@serviceId" />
                <Property key="USERDATA:monitoringendpoint.startup.kpis" type="string" value="GET_POLLS_RC,CREATE_POLL_RC,GET_POLL_RC,VOTE_RC,DELETE_POLL_RC,GET_POLLS_RD,CREATE_POLL_RD,GET_POLL_RD,VOTE_RD,DELETE_POLL_RD,GET_POLLS_AvgTX,CREATE_POLL_AvgTX,GET_POLL_AvgTX,VOTE_AvgTX,DELETE_POLL_AvgTX,GET_POLLS_AvgRT,CREATE_POLL_AvgRT,GET_POLL_AvgRT,VOTE_AvgRT,DELETE_POLL_AvgRT,GET_POLLS_QL,CREATE_POLL_QL,GET_POLL_QL,VOTE_QL,DELETE_POLL_QL" />
                <Property key="USERDATA:monitoringendpoint.startup.listener" type="string" value="ch.usi.monitoring.aggregation.AggregatorListener" />

               <Property key="USERDATA:monitoringgui.startup.port" type="string" value="8080" />
                <Property key="USERDATA:monitoringgui.startup.servicefqn" type="string" value="@serviceId" />
                <Property key="USERDATA:monitoringgui.startup.system" type="string" value="#(privateIp)" />

            <Property key="USERDATA:monitoringgui.register.with" type="string" value="memcached" />
            
            <Property key="USERDATA:monitoringgui.register.ip" type="string" value="#(privateIp)" />
            <Property key="USERDATA:monitoringgui.register.port" type="string" value="8080" />
            
            <Property key="USERDATA:monitoringgui.register.on.role" type="string" value="service" />
            <Property key="USERDATA:monitoringgui.register.on.ip" type="string" value="@memcachedIp" />
            <Property key="USERDATA:monitoringgui.register.on.port" type="string" value="8181" />
            <Property key="USERDATA:monitoringgui.register.on.experiment.id" type="string" value="@experimentId" />
            
            <Property key="USERDATA:monitoringgui.publish.to.ip" type="string" value="@memcachedIp" />
            <Property key="USERDATA:monitoringgui.publish.to.port" type="string" value="@memcachedPort" />
            <Property key="USERDATA:monitoringgui.publish.objectKey" type="string" value="@experimentId-serverResults" />

			</ProductSection>

		</VirtualSystem>

		<VirtualSystem id="backend" min="1" max="1" initial="1">
			<ProductSection >
				<Product>Database Server</Product>
				<Version>1.0</Version>

				<!-- VM Configuration -->
				<Property key="BASE_EMI" value="ami-0000014e" />
				<Property key="INSTANCE_TYPE" value="m1.medium" />

				<!-- Security settings for the VM  -->
				<Property key="SSH_KEY" value="elastic-testing-keys" />
				<Property key="SECURITY_GROUP" value="default" />

				<!-- User data for customizing the VM -->
				<!-- Components to start -->
				<Property key="STARTUP" type="string" value="controlinterface,doodledb" />
				<!-- Other configurations -->
				<!-- VM Level -->
				<Property key="USERDATA:INJECTED_HOSTNAME"
					cloudConfigurable="true" value="backend@replicaNum" />
			</ProductSection>

		</VirtualSystem>

		<VirtualSystem id="appserver" min="1" max="10" initial="1">
			<ProductSection >
				<Product>Web Server</Product>
				<Version>1.0</Version>
				<!-- VM Configuration -->
				<Property key="BASE_EMI" value="ami-0000014e" />
                	<Property key="INSTANCE_TYPE" value="m1.small" />

				<!-- Security settings for the VM  -->
				<Property key="SSH_KEY" value="elastic-testing-keys" />
				<Property key="SECURITY_GROUP" value="default" />

				<!-- User data for customizing the VM -->
				<!-- Components to start -->
				<Property key="STARTUP" type="string" value="controlinterface,doodleas" />
				<!-- Other configurations -->
				<!-- VM Level -->
				<Property key="USERDATA:INJECTED_HOSTNAME"
					cloudConfigurable="true" value="appserver@replicaNum" />
				<!-- Component Level -->
				<Property key="USERDATA:doodleas.env.doodledb.ip" cloudConfigurable="true" 
					type="string" value="@(backend, 0, privateIp)" />
                    
            <Property key="USERDATA:doodleas.startup.port" type="string" value="8081" />
            
            <Property key="USERDATA:doodleas.startup.brokerip" type="string" value="@(frontend, 0, privateIp)" />
                    <Property key="USERDATA:doodleas.startup.replicafqn" type="string" value="@replicaFQN" />
                                                
                <Property key="USERDATA:doodleas.register.with" type="string" value="loadbalancer" />
                <Property key="USERDATA:doodleas.register.ip" cloudConfigurable="true" type="string" value="#(privateIp)" />
                <Property key="USERDATA:doodleas.register.port" type="string" value="8081" />
                <Property key="USERDATA:doodleas.register.on.ip" type="string" value="@(frontend, 0, privateIp)" />
                <Property key="USERDATA:doodleas.register.on.port" type="string" value="8081" />
                
                

			</ProductSection>
		</VirtualSystem>
        
        <VirtualSystem id="controller" min="1" max="1" initial="1">
			<ProductSection >
				<Product>Controller</Product>
				<Version>1.0</Version>
				<!-- VM Configuration -->
				<Property key="BASE_EMI" value="ami-0000014e" />
				<Property key="INSTANCE_TYPE" value="m1.medium" />

				<!-- Security settings for the VM  -->
				<Property key="SSH_KEY" value="elastic-testing-keys" />
				<Property key="SECURITY_GROUP" value="default" />

				<!-- User data for customizing the VM -->
				<!-- Components to start -->
				<Property key="STARTUP" type="string" value="controlinterface,doodlecontroller,monitoringgui" />
				<!-- Other configurations -->
				<!-- VM Level -->
				<Property key="USERDATA:INJECTED_HOSTNAME"
					cloudConfigurable="true" value="controller" />

                <!-- When deployed with JOpera this is inserted on the fly, downloaded in a local file and used from there -->
				<Property key="USERDATA:doodlecontroller.env.manifesturl" type="string" value="@manifestURL" />

              <Property key="USERDATA:doodlecontroller.startup.servicestatus" type="string" value="@serviceStatus" />
				<Property key="USERDATA:doodlecontroller.startup.target.ip" cloudConfigurable="true"  type="string" value="@(frontend, 0, privateIp)" />
                <Property key="USERDATA:doodlecontroller.startup.target.servicefqn" cloudConfigurable="true"  type="string" value="@serviceId" />
            <Property key="USERDATA:doodlecontroller.startup.controller" type="string" value="rules" />

               <Property key="USERDATA:monitoringgui.startup.port" type="string" value="8080" />
                <Property key="USERDATA:monitoringgui.startup.servicefqn" type="string" value="@serviceId" />
                <Property key="USERDATA:monitoringgui.startup.controller" type="string" value="doodlecontroller" />

            <Property key="USERDATA:monitoringgui.register.with" type="string" value="memcached" />
            
            <Property key="USERDATA:monitoringgui.register.ip" type="string" value="#(privateIp)" />
            <Property key="USERDATA:monitoringgui.register.port" type="string" value="8080" />
            
            <Property key="USERDATA:monitoringgui.register.on.role" type="string" value="controller" />
            <Property key="USERDATA:monitoringgui.register.on.ip" type="string" value="@memcachedIp" />
            <Property key="USERDATA:monitoringgui.register.on.port" type="string" value="8181" />
            <Property key="USERDATA:monitoringgui.register.on.experiment.id" type="string" value="@experimentId" />

            <Property key="USERDATA:monitoringgui.publish.to.ip" type="string" value="@memcachedIp" />
            <Property key="USERDATA:monitoringgui.publish.to.port" type="string" value="@memcachedPort" />
            <Property key="USERDATA:monitoringgui.publish.objectKey" type="string" value="@experimentId-controllerResults" />

			</ProductSection>
		</VirtualSystem>

        
        <VirtualSystem id="clients" min="1" max="1" initial="1">
			<ProductSection >
				<Product>Clients</Product>
				<Version>1.0</Version>
				<!-- VM Configuration -->
				<Property key="BASE_EMI" value="ami-0000014e" />
				<Property key="INSTANCE_TYPE" value="m1.medium" />

				<!-- Security settings for the VM  -->
				<Property key="SSH_KEY" value="elastic-testing-keys" />
				<Property key="SECURITY_GROUP" value="default" />

				<!-- User data for customizing the VM -->
				<!-- Components to start -->
				<Property key="STARTUP" type="string" value="controlinterface,jmeter" />
				<!-- Other configurations -->
				<!-- VM Level -->
				<Property key="USERDATA:INJECTED_HOSTNAME"
					cloudConfigurable="true" value="clients" />

                <!-- When deployed with JOPera those must use @manifest and @trace annotations -->
				<!-- <Property key="USERDATA:jmeter.env.jmx.url" type="string" value="http://www.inf.usi.ch/phd/gambi/attachments/DoodleTestplan.jmx" /> -->
				<!-- <Property key="USERDATA:jmeter.env.trace.url" cloudConfigurable="true"  type="string" value="http://www.inf.usi.ch/phd/gambi/attachments/trace.csv" /> -->

				<Property key="USERDATA:jmeter.env.jmx.url" type="string" value="@jmxURL" />
				<Property key="USERDATA:jmeter.env.trace.url" cloudConfigurable="true"  type="string" value="@traceURL" />

                    
				<Property key="USERDATA:jmeter.startup.J.loadbalancer.ip" cloudConfigurable="true"  type="string" value="@(frontend, 0, privateIp)" />
				<Property key="USERDATA:jmeter.startup.J.loadbalancer.port" cloudConfigurable="true"  type="string" value="8081"/>
   				<Property key="USERDATA:jmeter.startup.J.clients.number" cloudConfigurable="true"  type="string" value="20"/>
                <Property key="USERDATA:jmeter.startup.J.initial.delay" cloudConfigurable="true"  type="string" value="60000" />
                <Property key="USERDATA:jmeter.startup.J.experiment.id" cloudConfigurable="true"  type="string" value="@experimentId" />
                <Property key="USERDATA:jmeter.startup.J.jopera.ip" cloudConfigurable="true"  type="string" value="@joperaIp" />
                <Property key="USERDATA:jmeter.startup.J.jopera.port" cloudConfigurable="true"  type="string" value="@joperaPort" />

                <Property key="USERDATA:jmeter.publish.to.ip" type="string" value="@memcachedIp" />
                <Property key="USERDATA:jmeter.publish.to.port" type="string" value="@memcachedPort" />
                <Property key="USERDATA:jmeter.publish.objectKey" type="string" value="@experimentId-clientResults" />
            
			</ProductSection>
		</VirtualSystem>


	</VirtualSystemCollection>
</Envelope>

